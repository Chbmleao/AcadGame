name: Testing code on pull requests

env:
  PRODUCTION_DB_NAME: acad_db
  PRODUCTION_DB_USER: acad_user
  PRODUCTION_DB_PASSWORD: senhaFalsa123
  PRODUCTION_DB_HOST: 127.0.0.1
  PRODUCTION_DB_PORT: 33306
  PRODUCTION_DB_DIALECT: mysql

  PRODUCTION_EXPRESS_PORT: 3001

  PRODUCTION_JWT_SECRET: "greenEyedBlackKittens12345678910"
  PRODUCTION_COOKIE_DURATION: "1d"

  TEST_DB_NAME: test_db
  TEST_DB_USER: tester
  TEST_DB_PASSWORD: testerFalso123
  TEST_DB_HOST: 127.0.0.1
  TEST_DB_PORT: 33306
  TEST_DB_DIALECT: mysql

  TEST_EXPRESS_PORT: 3001

  TEST_JWT_SECRET: "greenEyedBlackKittens12345678910"
  TEST_COOKIE_DURATION: "1d"

on:
  pull_request:
    branches: [ "main", "development" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x]
    
    services:
      mysql-database:
        image: mysql:5.7
        ports:
          - 33306:3306
        env:
          MYSQL_DATABASE: ${{ env.TEST_DB_NAME }}
          MYSQL_USER: ${{ env.TEST_DB_USER }}
          MYSQL_PASSWORD: ${{ env.TEST_DB_PASSWORD }}
          MYSQL_ROOT_PASSWORD: ${{ env.TEST_DB_PASSWORD }}
        options: >-
          --name=mysql-database
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3


    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - run: sudo service mysql restart
    - run: npm ci
      working-directory: server
    - run: npm run build --if-present
      working-directory: server
    - run: npm test
      working-directory: server
